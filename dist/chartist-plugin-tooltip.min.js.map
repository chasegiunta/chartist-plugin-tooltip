{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","show","element","hasClass","className","hide","regex","RegExp","replace","trim","getAttribute","indexOf","next","nextSibling","text","innerText","textContent","defaultOptions","currency","undefined","currencyFormatCallback","tooltipOffset","x","y","anchorToPoint","appendToBody","class","pointClass","showOnClick","showValue","position","plugins","tooltip","options","extend","chart","on","event","selector","callback","$chart","addEventListener","e","target","setPosition","height","$toolTip","offsetHeight","width","offsetWidth","offsetX","offsetY","anchorX","anchorY","style","top","pageY","left","pageX","box","getBoundingClientRect","pageXOffset","pageYOffset","x2","y2","parseInt","baseVal","value","tooltipSelector","constructor","name","Bar","prototype","Pie","donut","donutSolid","container","querySelector","createElement","body","appendChild","stopPropagation","$point","tooltipText","isPieChart","parentNode","seriesName","meta","hasMeta","transformTooltipTextFnc","tooltipFnc","metaIsHTML","txt","innerHTML","label"],"mappings":"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","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltip'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  /**\n  * Chartist.js plugin to display a data label on top of the points in a line chart.\n  *\n  */\n  /* global Chartist */\n  (function (window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      currency: undefined,\n      currencyFormatCallback: undefined,\n      tooltipOffset: {\n        x: 0,\n        y: -20\n      },\n      anchorToPoint: false,\n      appendToBody: false,\n      class: undefined,\n      pointClass: 'ct-point',\n      showOnClick: false,\n      showValue: true,\n      position: {\n        y: 'top',\n        x: 'center'\n      }\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.tooltip = function (options) {\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function tooltip(chart) {\n        var tooltipSelector = options.pointClass;\n        if (chart.constructor.name == Chartist.Bar.prototype.constructor.name) {\n          tooltipSelector = 'ct-bar';\n        } else if (chart.constructor.name ==  Chartist.Pie.prototype.constructor.name) {\n          if (chart.options.donut) {\n            if (chart.options.donutSolid) {\n              tooltipSelector = 'ct-slice-donut-solid';\n            } else {\n              tooltipSelector = 'ct-slice-donut';\n            }\n          } else {\n            tooltipSelector = 'ct-slice-pie';\n          }\n        }\n\n        var $chart = chart.container;\n        if ($chart) {\n          var $toolTip = $chart.querySelector('.chartist-tooltip');\n        }\n\n        var $toolTip = $chart.querySelector('.chartist-tooltip');\n        if (!$toolTip) {\n          $toolTip = document.createElement('div');\n          $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n          if (!options.appendToBody) {\n            $chart.appendChild($toolTip);\n          } else {\n            document.body.appendChild($toolTip);\n          }\n        }\n        var height = $toolTip.offsetHeight;\n        var width = $toolTip.offsetWidth;\n\n        hide($toolTip);\n\n        function on(event, selector, callback) {\n          $chart.addEventListener(event, function (e) {\n            if (!selector || hasClass(e.target, selector))\n            callback(e);\n          });\n        }\n\n        var fireEvent = options.showOnClick ? 'click' : 'mouseover';\n\n        on(fireEvent, tooltipSelector, function (event) {\n          options.showOnClick && event.stopPropagation();\n          var $point = event.target;\n          var tooltipText = '';\n\n          var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\n          var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n          var meta = $point.getAttribute('ct:meta') || seriesName || '';\n          var hasMeta = !!meta;\n          var value = $point.getAttribute('ct:value');\n\n          if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n            value = options.transformTooltipTextFnc(value);\n          }\n\n          if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n            tooltipText = options.tooltipFnc(meta, value);\n          } else {\n            if (options.metaIsHTML) {\n              var txt = document.createElement('textarea');\n              txt.innerHTML = meta;\n              meta = txt.value;\n            }\n\n            meta = '<span class=\"chartist-tooltip-meta\">(' + meta + ')</span>';\n\n            if (hasMeta) {\n              tooltipText += meta;\n            } else {\n              // For Pie Charts also take the labels into account\n              // Could add support for more charts here as well!\n              if (chart instanceof Chartist.Pie) {\n                var label = next($point, 'ct-label');\n                if (label) {\n                  tooltipText += text(label) + (options.showValue ? '<br>' : '');\n                }\n              }\n            }\n\n            if (value && options.showValue) {\n              if (options.currency) {\n                if (options.currencyFormatCallback != undefined) {\n                  value = options.currencyFormatCallback(value, options);\n                } else {\n                  value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n                }\n              }\n              value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n              tooltipText = value + ' ' + tooltipText;\n              tooltipText = tooltipText.trim();\n            }\n          }\n\n          if(tooltipText) {\n            $toolTip.innerHTML = tooltipText;\n            setPosition(event);\n            show($toolTip);\n\n            // Remember height and width to avoid wrong position in IE\n            height = $toolTip.offsetHeight;\n            width = $toolTip.offsetWidth;\n          }\n        });\n\n        if (!options.showOnClick) {\n          on('mouseout', tooltipSelector, function () {\n            hide($toolTip);\n          });\n\n          on('mousemove', null, function (event) {\n            if (false === options.anchorToPoint)\n              setPosition(event);\n          });\n        } else {\n          document.addEventListener('click', function (e) {\n            hide($toolTip);\n          });\n        }\n\n        function setPosition(event) {\n          height = height || $toolTip.offsetHeight;\n          width = width || $toolTip.offsetWidth;\n\n\n          var offsetX;\n\n          if (options.position.x == 'left') {\n            offsetX = -width + options.tooltipOffset.x;\n          } else if (options.position.x == 'right') {\n            offsetX = -options.tooltipOffset.x;\n          } else if (options.position.x == 'center') {\n            offsetX = -width / 2 + options.tooltipOffset.x;\n          }\n\n          var offsetY;\n\n          if (options.position.y == 'top') {\n            offsetY = -height + options.tooltipOffset.y;\n          } else if (options.position.y == 'bottom') {\n            offsetY = -options.tooltipOffset.y;\n          } else if (options.position.y == 'middle') {\n            offsetY = -height / 2 + options.tooltipOffset.y;\n          }\n\n          var anchorX, anchorY;\n\n          if (!options.appendToBody) {\n            var box = $chart.getBoundingClientRect();\n            var left = event.pageX - box.left - window.pageXOffset ;\n            var top = event.pageY - box.top - window.pageYOffset ;\n\n            if (true === options.anchorToPoint && event.target.x2 && event.target.y2) {\n              anchorX = parseInt(event.target.x2.baseVal.value);\n              anchorY = parseInt(event.target.y2.baseVal.value);\n            }\n\n            $toolTip.style.top = (anchorY || top) + offsetY + 'px';\n            $toolTip.style.left = (anchorX || left) + offsetX + 'px';\n          } else {\n            $toolTip.style.top = event.pageY + offsetY + 'px';\n            $toolTip.style.left = event.pageX + offsetX + 'px';\n          }\n        }\n      }\n    };\n\n    function show(element) {\n      if(!hasClass(element, 'tooltip-show')) {\n        element.className = element.className + ' tooltip-show';\n      }\n    }\n\n    function hide(element) {\n      var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n      element.className = element.className.replace(regex, '').trim();\n    }\n\n    function hasClass(element, className) {\n      return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n    }\n\n    function next(element, className) {\n      do {\n        element = element.nextSibling;\n      } while (element && !hasClass(element, className));\n      return element;\n    }\n\n    function text(element) {\n      return element.innerText || element.textContent;\n    }\n\n  } (window, document, Chartist));\n\n  return Chartist.plugins.tooltip;\n\n}));\n"]}